<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize the player Stats object
display_set_gui_size(view_wview[0], view_hview[0]);

//initialize some variables
hp = 3;
maxhp = 3;
sapphires = 0;
score = 0;
highscore = 0;
time = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// to start the game
var start = keyboard_check_pressed(vk_anykey);

if (start == true &amp;&amp; room = rm_menu) {
    room_goto(rm_one);
}

/// to start the game
var menureturn = keyboard_check_pressed(vk_anykey);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the Stats

switch (room){
    case rm_menu :
        draw_set_halign(fa_center);
        draw_set_font(fnt_title);
        draw_text_colour(room_width/2+3, 30, "Santa Game #Whatever", c_black, c_black, c_black, c_black, .3);
        draw_text_colour(room_width/2, 25, "Santa Game #Whatever", c_white, c_white, c_white, c_white, 1);
   
        draw_set_font(fnt_start);
        draw_text_colour(room_width/2+1, 203, "Press Any Key to Start", c_black, c_black, c_black, c_black, .3);
        draw_text_colour(room_width/2, 200, "Press Any Key to Start", c_white, c_white, c_white, c_white, 1);
       

    break;

    case rm_highscore:
        draw_set_halign(fa_center);
        draw_text_colour(room_width/2+1, 28, "Merry Christmas!!!", c_black, c_black, c_black, c_black, .3);
        draw_text_colour(room_width/2, 25, "Merry Christmas!!!", c_white, c_white, c_white, c_white, 1);
        // shaddow
        draw_text_colour(room_width/2+1, 183, "Your Time Was: " + string(floor(time/room_speed)), c_black, c_black, c_black, c_black, .3);
        draw_text_colour(room_width/2+1, 203, "Your Score Was: " + string(score), c_black, c_black, c_black, c_black, .3);
        draw_text_colour(room_width/2+1, 223, "The Highscore Was: " + string(highscore), c_black, c_black, c_black, c_black, .3);
        // main
        draw_text_colour(room_width/2, 180, "Your Time Was: " + string(floor(time/room_speed)), c_white, c_white, c_white, c_white, 1);
        draw_text_colour(room_width/2, 200, "Your Score Was: " + string(score), c_white, c_white, c_white, c_white, 1);
        draw_text_colour(room_width/2, 220, "The Highscore Was: " + string(highscore), c_white, c_white, c_white, c_white, 1);
    
    break;
    
    default:

for (var i=0; i&lt;maxhp; i++) {
draw_sprite_ext(spr_heart_empty, 0, 20+i*30, 18, 1, 1, 0, c_white, 1);
}

// Draw the hearts
for (var i=0; i&lt;hp; i++) {
draw_sprite_ext(spr_heart, 0, 20+i*30, 18, 1, 1, 0, c_white, 1);
}

// Draw the sapphire count
draw_set_halign(fa_right);
draw_set_font(fnt_start);
var str = string(sapphires);
draw_text_colour(view_wview[0]-14, 1, string(sapphires), c_green, c_green, c_green, c_green, .3);
draw_text_colour(view_wview[0]-16, 0, string(sapphires), $990000, $990000, $990000, $990000, 1);


var text_width = string_width(str);
draw_sprite(spr_sapphire_gui, 0, view_wview[0]-35-text_width, 16);

// Adding to time
time += 1;

// Draw the timer
draw_text_colour(view_wview[0]/2+52, 1, "TIME: " + string(floor(time/room_speed)), c_green, c_green, c_green, c_green, .3);
draw_text_colour(view_wview[0]/2+50, 0, "TIME: " + string(floor(time/room_speed)), $990000, $990000, $990000, $990000, 1);



break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// end the game
game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
